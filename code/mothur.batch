#!bash

#Set local variables
mothurRv=/mnt/EXT/Schloss-data/bin/mothur
DOWNDIR=data/raw
WORKDIR=data/process
REF=data/references

#Future section for dowloading data
wget -r -q -np -nd -k -P $DOWNDIR ftp://ftp-trace.ncbi.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP062/SRP062005/
wget -r -q -np -nd -k -P $DOWNDIR ftp://ftp-trace.ncbi.nih.gov/sra/sra-instant/reads/ByStudy/sra/SRP/SRP096/SRP096978/

#Unzip fastq files and place them in work directory
for sample in $DOWNDIR/*.sra
do
	fastq-dump --split-files $sample -O $WORKDIR

done

#Run mothur process

$mothurRv "#make.contigs(file=$WORKDIR/stability.files, processors=4);
	summary.seqs(fasta=current);
	screen.seqs(fasta=current, group=current, summary=current, maxambig=0, maxlength=275);
	summary.seqs(fasta=current);
	unique.seqs(fasta=current);
	summary.seqs(fasta=current, name=current);
	count.seqs(name=current, group=current);
	summary.seqs(fasta=current, count=current);
	align.seqs(fasta=current, reference=$REF/silva.v4.align);
	summary.seqs(fasta=current, count=current);
	screen.seqs(fasta=current, count=current, summary=current, start=1968, end=11550, maxhomop=8);
	summary.seqs(fasta=current,count=current);
	filter.seqs(fasta=current, vertical=T, trump=.);
	unique.seqs(fasta=current, count=current);
	pre.cluster(fasta=current, count=current, diffs=2);
	chimera.uchime(fasta=current, count=current, dereplicate=t);
	remove.seqs(fasta=current, accnos=current);
	summary.seqs(fasta=current,count=current);
	classify.seqs(fasta=current, count=current, reference=$REF/trainset14_032015.pds.fasta, taxonomy=$REF/trainset14_032015.pds.tax, cutoff=80);
	remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota);
	get.groups(fasta=current, count=current, groups=mock1-mock2-mock5-mock6-mock7);
	seq.error(fasta=current, count=current, reference=$REF/HMP_MOCK.fasta, aligned=F)"


# Rename final fasta, taxa, and count file

mv $WORKDIR/stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta $WORKDIR/unmatched.fasta
mv $WORKDIR/stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.count_table $WORKDIR/unmatched.count_table
mv $WORKDIR/stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.taxonomy $WORKDIR/unmatched.taxonomy

# Move Error analysis to error directory

mv $WORKDIR/stability.*.error.* $WORKDIR/error_analysis/
mv $WORKDIR/stability.trim.contigs.good.unique.good.filter.unique.precluster.denovo.uchime.pick.pick.pick.count_table $WORKDIR/error_analysis/
mv $WORKDIR/stability.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta $WORKDIR/error_analysis/
mv $WORKDIR/stability.files $WORKDIR/followup.files

# Split the files for clustering

$mothurRv "#cluster.split(fasta=$WORKDIR/unmatched.fasta, count=$WORKDIR/unmatched.count_table, taxonomy=$WORKDIR/unmatched.taxonomy, splitmethod=classify, taxlevel=5, cutoff=0.1, cluster=F, processors=4)"


